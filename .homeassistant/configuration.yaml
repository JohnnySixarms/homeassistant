homeassistant:
  name: Wohnung 
  latitude: !secret latitude
  longitude: !secret longitude
  elevation: 480  
  unit_system: metric
  time_zone: Europe/Berlin

  customize: !include customize.yaml

# Show links to resources in log and frontend
#introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  api_password: !secret http_password

updater:

discovery:

#mosquitto
mqtt:
 broker: 192.168.1.5
 port: 18839
 client_id: homeassistant
 username: !secret mosquitto_login
 password: !secret mosquitto_password

# Weather prediction
sensor:
  - platform: yr
    name: weather
    forecast: 24
    monitored_conditions:
      - temperature
      - symbol
#      - precipitation
      - windSpeed
      - pressure
      - windDirection
#      - humidity
#      - fog
#      - cloudiness
#      - lowClouds
#      - mediumClouds
#      - highClouds
#      - dewpointTemperature

# Template
  - platform: template
    sensors:
      current_ip:
        value_template: "{{ states.sensor.fritz_netmonitor.attributes.external_ip }}"
        friendly_name: "Aktuelle IP"
#      rate_up:
#        value_template: "{{ (0.001*states.sensor.fritz_netmonitor.attributes.transmission_rate_up)|round(2) }}"
#        friendly_name: "Upload"
#        unit_of_measurement: 'kbit/s'
#      rate_down:
#        value_template: "{{ (0.001*states.sensor.fritz_netmonitor.attributes.transmission_rate_down)|round(2) }}"
#        friendly_name: "Download"
#        unit_of_measurement: 'kbit/s'
      ws_temp:
        value_template: "{{ states.switch.workstation.attributes.temperature }}"
        friendly_name : "Temperatur Workstation"
        unit_of_measurement: '째C'
      tv_temp:
        value_template: "{{ states.switch.tv_konsolen.attributes.temperature }}"
        friendly_name : "Temperatur TV/Konsolen"
        unit_of_measurement: '째C'
      ms_temp:
        value_template: "{{ states.switch.microserver_gen_8.attributes.temperature }}"
        friendly_name : "Temperatur Microserver"
        unit_of_measurement: '째C'
      ls_temp:
        value_template: "{{ states.switch.ladestation.attributes.temperature }}"
        friendly_name : "Temperatur Ladestation"
        unit_of_measurement: '째C'
      ws_power:
        value_template: "{{ states.switch.workstation.attributes.current_consumption }}"
        friendly_name : "Verbrauch Workstation"
        unit_of_measurement: 'W'
      tv_power:
        value_template: "{{ states.switch.tv_konsolen.attributes.current_consumption }}"
        friendly_name : "Verbrauch TV/Konsolen"
        unit_of_measurement: 'W'
      ms_power:
        value_template: "{{ states.switch.microserver_gen_8.attributes.current_consumption }}"
        friendly_name : "Verbauch Microserver"
        unit_of_measurement: 'W'
      ls_power:
        value_template: "{{ states.switch.ladestation.attributes.current_consumption }}"
        friendly_name : "Verbrauch Ladestation"
        unit_of_measurement: 'W'

  - platform: fritzbox_netmonitor
    host: 192.168.1.1

# Fritzbox
switch:
  - platform: fritzdect
    host: 192.168.1.1
    username: !secret fb_login
    password: !secret fb_password
  - platform: mqtt
    name: "sonoff1"
    state_topic: "stat/sonoff1/POWER"
    command_topic: "cmnd/sonoff1/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
  - platform: mqtt
    name: "sonoff2"
    state_topic: "stat/sonoff2/POWER"
    command_topic: "cmnd/sonoff2/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
  - platform: mqtt
    name: "sonoff3"
    state_topic: "stat/sonoff3/POWER"
    command_topic: "cmnd/sonoff3/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
    
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
